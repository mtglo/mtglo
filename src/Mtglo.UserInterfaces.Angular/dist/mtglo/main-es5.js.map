{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/card-collection/card-collection.component.ts","webpack:///src/app/card-collection/card-collection.component.html","webpack:///src/app/card/card.component.ts","webpack:///src/app/card/card.component.html","webpack:///src/app/deck-library/deck-library.component.ts","webpack:///src/app/deck-library/deck-library.component.html","webpack:///src/app/deck/deck.component.ts","webpack:///src/app/deck/deck.component.html","webpack:///src/app/decklist/decklist.component.ts","webpack:///src/app/decklist/decklist.component.html","webpack:///src/app/horizontal-navigation-bar/horizontal-navigation-bar.component.ts","webpack:///src/app/horizontal-navigation-bar/horizontal-navigation-bar.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","children","AppRoutingModule","forRoot","imports","AppComponent","title","deckList","cardName","cardQuantity","decks","deckName","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","CardCollectionComponent","CardComponent","DeckLibraryComponent","listOfDecks","DeckComponent","route","newCard","isCollapsed","subscription","params","subscribe","deck","currentDeckList","find","element","unsubscribe","DecklistComponent","HorizontalNavigationBarComponent","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AppComponent } from './app.component';\r\nimport { DeckComponent } from './deck/deck.component';\r\nimport { DeckLibraryComponent } from './deck-library/deck-library.component';\r\nimport { CardCollectionComponent } from './card-collection/card-collection.component';\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'decks',\r\n        component: DeckLibraryComponent,\r\n        children: [\r\n            {path: ':deckName', component: DeckComponent }\r\n        ]\r\n    },\r\n    { path: 'collection', component: CardCollectionComponent}\r\n];\r\n\r\n\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\nimport { DeckComponent } from './deck/deck.component';\r\nimport { DeckLibraryComponent } from './deck-library/deck-library.component'\r\n\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n    title = 'mtglo';\r\n    deckList = [{ cardName: 'Land', cardQuantity: 23 }, { cardName: 'Lightning Bolt', cardQuantity: 4 }, { cardName: 'Carmaggedon', cardQuantity: 4 }, { cardName: 'Demonic Puter', cardQuantity: 4 }]\r\n    decks = [{ deckName: 'Burn', deckList: this.deckList }, { deckName: 'Affinity', deckList: this.deckList }];\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col\">\r\n                <h1>The MTGLO Deck Listificator</h1>\r\n        </div>\r\n    </div>\r\n    <mtglo-horizontal-navigation-bar></mtglo-horizontal-navigation-bar>\r\n    <router-outlet></router-outlet>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { DeckComponent } from './deck/deck.component';\r\nimport { DecklistComponent } from './decklist/decklist.component';\r\nimport { CardComponent } from './card/card.component';\r\nimport { DeckLibraryComponent } from './deck-library/deck-library.component';\nimport { HorizontalNavigationBarComponent } from './horizontal-navigation-bar/horizontal-navigation-bar.component';\nimport { CardCollectionComponent } from './card-collection/card-collection.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    DeckComponent,\r\n    DecklistComponent,\r\n    CardComponent,\r\n    DeckLibraryComponent,\r\n    HorizontalNavigationBarComponent,\r\n    CardCollectionComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    NgbModule,\r\n    FormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-card-collection',\n  templateUrl: './card-collection.component.html',\n  styleUrls: ['./card-collection.component.css']\n})\nexport class CardCollectionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n    <main class=\"col\">\n        <ul>\n            <li>Look</li>\n            <li>at</li>\n            <li>all</li>\n            <li>these</li>\n            <li>cards!</li>\n        </ul>\n    </main>\n    <div class=\"col sidebar\">\n        <h1>This is your card collection</h1>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.css']\n})\nexport class CardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>card works!</p>\n","import { Component, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'mtglo-deck-library',\n  templateUrl: './deck-library.component.html',\n  styleUrls: ['./deck-library.component.css']\n})\nexport class DeckLibraryComponent implements OnInit {\n\n  listOfDecks = [{deckName: 'Burn'}, {deckName: 'Affinity'}, {deckName: 'Death_and_Taxes'}, {deckName: 'Blue_is_Dumb'}, {deckName: 'Green_Dudes'}, {deckName: 'Red dead redemption'}];\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n    <main class=\"col\">\n        <router-outlet></router-outlet>\n    </main>\n    <div class=\"col sidebar\">\n        <h1>Deck Library</h1>\n        <li *ngFor=\"let deck of this.listOfDecks\">\n            <a [routerLink]=\"['/decks', deck.deckName]\">{{ deck.deckName }}</a>\n        </li>\n    </div>\n</div>","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscriber, Subscription } from 'rxjs';\n\n@Component({\n    selector: 'mtglo-deck',\n    templateUrl: './deck.component.html',\n    styleUrls: ['./deck.component.css']\n})\nexport class DeckComponent implements OnInit, OnDestroy {\n\n    deck: {deckName: string};\n    newCard = '';\n    currentDeckList: { deckName: string, deckList: string;}\n\n    constructor(private route: ActivatedRoute) {\n    }\n\n    // @Input('deck') deck: { deckName: string, deckList: [{ cardName: string, cardQuantity: number }] };\n\n    listOfDecks = [{ deckName: 'Burn', deckList: 'cards 1'}, { deckName: 'Affinity', deckList: 'cards 2' }, { deckName: 'Death_and_Taxes', deckList: 'cards 3' }, { deckName: 'Blue_is_Dumb', deckList: 'cards 4' }, { deckName: 'Green_Dudes', deckList: 'cards 5' }];\n    subscription: Subscription;\n\n    public isCollapsed = false;\n\n    ngOnInit(){\n        \n        this.subscription = this.route.params.subscribe(params => {\n            this.deck = {\n                deckName: params['deckName']\n            };\n            this.currentDeckList = this.listOfDecks.find(element => element.deckName == this.deck.deckName);\n        });\n        \n    }\n\n    ngOnDestroy(){\n        this.subscription.unsubscribe();\n    }\n\n}","<div>\n    <p>Deck with name {{this.currentDeckList.deckName}} loaded</p>\n    <p>Deck contains: {{this.currentDeckList.deckList}}</p>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-decklist',\n  templateUrl: './decklist.component.html',\n  styleUrls: ['./decklist.component.css']\n})\nexport class DecklistComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>decklist works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'mtglo-horizontal-navigation-bar',\n  templateUrl: './horizontal-navigation-bar.component.html',\n  styleUrls: ['./horizontal-navigation-bar.component.css']\n})\nexport class HorizontalNavigationBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <a class=\"navbar-brand\" href=\"#\">\n                <img src=\"assets/image/image-asset.jpeg\" width=\"100\" height=\"100\" alt=\"mgtlo logo\">\n                MTGLO\n              </a>\n            <ul class=\"navbar-nav mr-auto\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Home</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" routerLink=\"/decks\">Deck Library</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" routerLink=\"/collection\">Card Collection</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link disabled\" href=\"#\">Disabled</a>\n                </li>\n            </ul>\n        </nav>\n    </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}